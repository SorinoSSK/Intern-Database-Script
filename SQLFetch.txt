        if(strcmp(azColName[i],"uptime") == 0)
            fetched_sensor_data->uptime = atol(argv[i]);
        else if(strcmp(azColName[i],"timeStamp") == 0)
            fetched_sensor_data->timestamp = atol(argv[i]);
        else if(strcmp(azColName[i],"timeStamp") == 0)
            fetched_sensor_data->timestamp = atol(argv[i]);
        else if(strcmp(azColName[i],"system_mode") == 0)
        {
            fetched_sensor_data->battery.system_mode = atoi(argv[i]);
            printf("system_mode %lf\r\n",fetched_sensor_data->battery.system_mode);
        }
        else if(strcmp(azColName[i],"primary_charging_relay") == 0)
            fetched_sensor_data->battery.primary_charging_relay = atof(argv[i]);
        else if(strcmp(azColName[i],"primary_discharge_relay") == 0)
            fetched_sensor_data->battery.primary_discharge_relay = atof(argv[i]);
        else if(strcmp(azColName[i],"primary_positive_pump") == 0)
            fetched_sensor_data->battery.primary_positive_pump = atof(argv[i]);
        else if(strcmp(azColName[i],"primary_negative_pump") == 0)
            fetched_sensor_data->battery.primary_negative_pump = atof(argv[i]);
        else if(strcmp(azColName[i],"system_alarm_status") == 0)
            fetched_sensor_data->battery.system_alarm_status = atof(argv[i]);
        else if(strcmp(azColName[i],"balancing_valve") == 0)
            fetched_sensor_data->battery.balancing_valve = atof(argv[i]);
        else if(strcmp(azColName[i],"positive_valve") == 0)
            fetched_sensor_data->battery.positive_valve = atof(argv[i]);
        else if(strcmp(azColName[i],"negative_valve") == 0)
            fetched_sensor_data->battery.negative_valve = atof(argv[i]);
        else if(strcmp(azColName[i],"state_of_charge") == 0)
            fetched_sensor_data->battery.state_of_charge = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_voltage") == 0)
            fetched_sensor_data->battery.bcu_voltage = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_current") == 0)
            fetched_sensor_data->battery.bcu_current = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_power") == 0)
            fetched_sensor_data->battery.bcu_power = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_state_of_charge") == 0)
            fetched_sensor_data->battery.bcu_state_of_charge = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_mode_status") == 0)
            fetched_sensor_data->battery.bcu_mode_status = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_hydrogen_sensor") == 0)
            fetched_sensor_data->battery.bcu_hydrogen_sensor = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_leakage_sensor") == 0)
            fetched_sensor_data->battery.bcu_leakage_sensor = atof(argv[i]);
        else if(strcmp(azColName[i],"smoke_sensor") == 0)
            fetched_sensor_data->battery.smoke_sensor = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_ocv") == 0)
            fetched_sensor_data->battery.bcu_ocv = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_positive_tank_temp") == 0)
            fetched_sensor_data->battery.bcu_positive_tank_temp = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_negative_tank_temp") == 0)
            fetched_sensor_data->battery.bcu_negative_tank_temp = atof(argv[i]);
        else if(strcmp(azColName[i],"positive_tank_high_level_float") == 0)
            fetched_sensor_data->battery.positive_tank_high_level_float = atof(argv[i]);
        else if(strcmp(azColName[i],"negative_tank_high_level_float") == 0)
            fetched_sensor_data->battery.negative_tank_high_level_float = atof(argv[i]);
        else if(strcmp(azColName[i],"positive_tank_low_level_float") == 0)
            fetched_sensor_data->battery.positive_tank_low_level_float = atof(argv[i]);
        else if(strcmp(azColName[i],"negative_tank_low_level_float") == 0)
            fetched_sensor_data->battery.negative_tank_low_level_float = atof(argv[i]);
        else if(strcmp(azColName[i],"primary_stack_voltage") == 0)
            fetched_sensor_data->battery.primary_stack_voltage = atof(argv[i]);
        else if(strcmp(azColName[i],"primary_stack_current") == 0)
            fetched_sensor_data->battery.primary_stack_current = atof(argv[i]);
        else if(strcmp(azColName[i],"primary_stack_positive_pressure_sensor") == 0)
            fetched_sensor_data->battery.primary_stack_positive_pressure_sensor = atof(argv[i]);
        else if(strcmp(azColName[i],"primary_stack_negative_pressure_sensor") == 0)
            fetched_sensor_data->battery.primary_stack_negative_pressure_sensor = atof(argv[i]);
        else if(strcmp(azColName[i],"float") == 0)
            fetched_sensor_data->battery.float = atof(argv[i]);
        else if(strcmp(azColName[i],"positive_stack_pressure_delta") == 0)
            fetched_sensor_data->battery.positive_stack_pressure_delta = atof(argv[i]);
        else if(strcmp(azColName[i],"b1_primary_stack_pressure_delta") == 0)
            fetched_sensor_data->battery.b1_primary_stack_pressure_delta = atof(argv[i]);
        else if(strcmp(azColName[i],"sensor_temp") == 0)
            fetched_sensor_data->battery.sensor_temp = atof(argv[i]);
        else if(strcmp(azColName[i],"humidity") == 0)
            fetched_sensor_data->battery.humidity = atof(argv[i]);
        else if(strcmp(azColName[i],"system0PVEnable") == 0)
            fetched_sensor_data->battery.system0PVEnable = atof(argv[i]);
        else if(strcmp(azColName[i],"system0PVChargePower") == 0)
            fetched_sensor_data->battery.system0PVChargePower = atof(argv[i]);
        else if(strcmp(azColName[i],"system0PVTotalPower") == 0)
            fetched_sensor_data->battery.system0PVTotalPower = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1InvFreq") == 0)
            fetched_sensor_data->battery.pcs1InvFreq = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1InternalTemperature") == 0)
            fetched_sensor_data->battery.pcs1InternalTemperature = atof(argv[i]);
        else if(strcmp(azColName[i],"New") == 0)
            fetched_sensor_data->battery.New = atof(argv[i]);
        else if(strcmp(azColName[i],"secondary_stack_positive_pressure_sensor") == 0)
            fetched_sensor_data->battery.secondary_stack_positive_pressure_sensor = atof(argv[i]);
        else if(strcmp(azColName[i],"secondary_stack_negative_pressure_sensor") == 0)
            fetched_sensor_data->battery.secondary_stack_negative_pressure_sensor = atof(argv[i]);
        else if(strcmp(azColName[i],"secondary_stack_voltage") == 0)
            fetched_sensor_data->battery.secondary_stack_voltage = atof(argv[i]);
        else if(strcmp(azColName[i],"secondary_stack_current") == 0)
            fetched_sensor_data->battery.secondary_stack_current = atof(argv[i]);
        else if(strcmp(azColName[i],"bcu_leakage_sensor2") == 0)
            fetched_sensor_data->battery.bcu_leakage_sensor2 = atof(argv[i]);
        else if(strcmp(azColName[i],"dc_main_contactor") == 0)
            fetched_sensor_data->battery.dc_main_contactor = atof(argv[i]);
        else if(strcmp(azColName[i],"pre_charge_relay") == 0)
            fetched_sensor_data->battery.pre_charge_relay = atof(argv[i]);
        else if(strcmp(azColName[i],"ac_fan_coil1") == 0)
            fetched_sensor_data->battery.ac_fan_coil1 = atof(argv[i]);
        else if(strcmp(azColName[i],"fluid_fan") == 0)
            fetched_sensor_data->battery.fluid_fan = atof(argv[i]);
        else if(strcmp(azColName[i],"dcdb_fan") == 0)
            fetched_sensor_data->battery.dcdb_fan = atof(argv[i]);
        else if(strcmp(azColName[i],"float") == 0)
            fetched_sensor_data->battery.float = atof(argv[i]);
        else if(strcmp(azColName[i],"float") == 0)
            fetched_sensor_data->battery.float = atof(argv[i]);
        else if(strcmp(azColName[i],"PCS") == 0)
            fetched_sensor_data->battery.PCS = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_dc_volts") == 0)
            fetched_sensor_data->battery.pcs1_dc_volts = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_dc_batt_current") == 0)
            fetched_sensor_data->battery.pcs1_dc_batt_current = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_dc_inverter_power") == 0)
            fetched_sensor_data->battery.pcs1_dc_inverter_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_voltage") == 0)
            fetched_sensor_data->battery.pcs1_voltage = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_current") == 0)
            fetched_sensor_data->battery.pcs1_current = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_reactive_power") == 0)
            fetched_sensor_data->battery.pcs1_reactive_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_load_power") == 0)
            fetched_sensor_data->battery.pcs1_load_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_ac_supply_power") == 0)
            fetched_sensor_data->battery.pcs1_ac_supply_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_ac_out_status") == 0)
            fetched_sensor_data->battery.pcs1_ac_out_status = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_fault_status") == 0)
            fetched_sensor_data->battery.pcs1_fault_status = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_fan_speed") == 0)
            fetched_sensor_data->battery.pcs1_fan_speed = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs1_ac_power") == 0)
            fetched_sensor_data->battery.pcs1_ac_power = atof(argv[i]);
        else if(strcmp(azColName[i],"Parameters") == 0)
            fetched_sensor_data->battery.Parameters = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_dc_volts") == 0)
            fetched_sensor_data->battery.pcs2_dc_volts = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_dc_batt_current") == 0)
            fetched_sensor_data->battery.pcs2_dc_batt_current = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_dc_inverter_power") == 0)
            fetched_sensor_data->battery.pcs2_dc_inverter_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_voltage") == 0)
            fetched_sensor_data->battery.pcs2_voltage = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_current") == 0)
            fetched_sensor_data->battery.pcs2_current = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_reactive_power") == 0)
            fetched_sensor_data->battery.pcs2_reactive_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_load_power") == 0)
            fetched_sensor_data->battery.pcs2_load_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_ac_supply_power") == 0)
            fetched_sensor_data->battery.pcs2_ac_supply_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_ac_out_status") == 0)
            fetched_sensor_data->battery.pcs2_ac_out_status = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_fault_status") == 0)
            fetched_sensor_data->battery.pcs2_fault_status = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_fan_speed") == 0)
            fetched_sensor_data->battery.pcs2_fan_speed = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2_ac_power") == 0)
            fetched_sensor_data->battery.pcs2_ac_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2InvFreq") == 0)
            fetched_sensor_data->battery.pcs2InvFreq = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs2InternalTemperature") == 0)
            fetched_sensor_data->battery.pcs2InternalTemperature = atof(argv[i]);
        else if(strcmp(azColName[i],"Parameters") == 0)
            fetched_sensor_data->battery.Parameters = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_dc_volts") == 0)
            fetched_sensor_data->battery.pcs3_dc_volts = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_dc_batt_current") == 0)
            fetched_sensor_data->battery.pcs3_dc_batt_current = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_dc_inverter_power") == 0)
            fetched_sensor_data->battery.pcs3_dc_inverter_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_voltage") == 0)
            fetched_sensor_data->battery.pcs3_voltage = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_current") == 0)
            fetched_sensor_data->battery.pcs3_current = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_reactive_power") == 0)
            fetched_sensor_data->battery.pcs3_reactive_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_load_power") == 0)
            fetched_sensor_data->battery.pcs3_load_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_ac_supply_power") == 0)
            fetched_sensor_data->battery.pcs3_ac_supply_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_ac_out_status") == 0)
            fetched_sensor_data->battery.pcs3_ac_out_status = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_fault_status") == 0)
            fetched_sensor_data->battery.pcs3_fault_status = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_fan_speed") == 0)
            fetched_sensor_data->battery.pcs3_fan_speed = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3_ac_power") == 0)
            fetched_sensor_data->battery.pcs3_ac_power = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3InvFreq") == 0)
            fetched_sensor_data->battery.pcs3InvFreq = atof(argv[i]);
        else if(strcmp(azColName[i],"pcs3InternalTemperature") == 0)
            fetched_sensor_data->battery.pcs3InternalTemperature = atof(argv[i]);
        else if(strcmp(azColName[i],"devices") == 0)
            fetched_sensor_data->battery.devices = atof(argv[i]);
        else if(strcmp(azColName[i],"lib_soc") == 0)
            fetched_sensor_data->battery.lib_soc = atof(argv[i]);
        else if(strcmp(azColName[i],"lib_cur") == 0)
            fetched_sensor_data->battery.lib_cur = atof(argv[i]);
        else if(strcmp(azColName[i],"lib_vol") == 0)
            fetched_sensor_data->battery.lib_vol = atof(argv[i]);
        else if(strcmp(azColName[i],"epic_hsvc") == 0)
            fetched_sensor_data->battery.epic_hsvc = atof(argv[i]);
        else if(strcmp(azColName[i],"epic_auto") == 0)
            fetched_sensor_data->battery.epic_auto = atof(argv[i]);
        else if(strcmp(azColName[i],"epic_lscc") == 0)
            fetched_sensor_data->battery.epic_lscc = atof(argv[i]);
        else if(strcmp(azColName[i],"epic_lsvc") == 0)
            fetched_sensor_data->battery.epic_lsvc = atof(argv[i]);
        else if(strcmp(azColName[i],"epic_enable") == 0)
            fetched_sensor_data->battery.epic_enable = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_1_actual_speed") == 0)
            fetched_sensor_data->battery.vfd_1_actual_speed = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_1_motor_curr") == 0)
            fetched_sensor_data->battery.vfd_1_motor_curr = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_1_motor_vol") == 0)
            fetched_sensor_data->battery.vfd_1_motor_vol = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_1_motor_dcv") == 0)
            fetched_sensor_data->battery.vfd_1_motor_dcv = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_2_actual_speed") == 0)
            fetched_sensor_data->battery.vfd_2_actual_speed = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_2_motor_curr") == 0)
            fetched_sensor_data->battery.vfd_2_motor_curr = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_2_motor_vol") == 0)
            fetched_sensor_data->battery.vfd_2_motor_vol = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_2_motor_dcv") == 0)
            fetched_sensor_data->battery.vfd_2_motor_dcv = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_3_actual_speed") == 0)
            fetched_sensor_data->battery.vfd_3_actual_speed = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_3_motor_curr") == 0)
            fetched_sensor_data->battery.vfd_3_motor_curr = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_3_motor_vol") == 0)
            fetched_sensor_data->battery.vfd_3_motor_vol = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_3_motor_dcv") == 0)
            fetched_sensor_data->battery.vfd_3_motor_dcv = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_4_actual_speed") == 0)
            fetched_sensor_data->battery.vfd_4_actual_speed = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_4_motor_curr") == 0)
            fetched_sensor_data->battery.vfd_4_motor_curr = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_4_motor_vol") == 0)
            fetched_sensor_data->battery.vfd_4_motor_vol = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_4_motor_dcv") == 0)
            fetched_sensor_data->battery.vfd_4_motor_dcv = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_5_actual_speed") == 0)
            fetched_sensor_data->battery.vfd_5_actual_speed = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_5_motor_curr") == 0)
            fetched_sensor_data->battery.vfd_5_motor_curr = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_5_motor_vol") == 0)
            fetched_sensor_data->battery.vfd_5_motor_vol = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_5_motor_dcv") == 0)
            fetched_sensor_data->battery.vfd_5_motor_dcv = atof(argv[i]);
        else if(strcmp(azColName[i],"More") == 0)
            fetched_sensor_data->battery.More = atof(argv[i]);
        else if(strcmp(azColName[i],"flt_ppfs") == 0)
            fetched_sensor_data->battery.flt_ppfs = atof(argv[i]);
        else if(strcmp(azColName[i],"flt_pnfs") == 0)
            fetched_sensor_data->battery.flt_pnfs = atof(argv[i]);
        else if(strcmp(azColName[i],"flt_spfs") == 0)
            fetched_sensor_data->battery.flt_spfs = atof(argv[i]);
        else if(strcmp(azColName[i],"flt_snfs") == 0)
            fetched_sensor_data->battery.flt_snfs = atof(argv[i]);
        else if(strcmp(azColName[i],"flt_dpfs") == 0)
            fetched_sensor_data->battery.flt_dpfs = atof(argv[i]);
        else if(strcmp(azColName[i],"flt_dnfs") == 0)
            fetched_sensor_data->battery.flt_dnfs = atof(argv[i]);
        else if(strcmp(azColName[i],"smoke_sensor2") == 0)
            fetched_sensor_data->battery.smoke_sensor2 = atof(argv[i]);
        else if(strcmp(azColName[i],"k3_bkup_sys") == 0)
            fetched_sensor_data->battery.k3_bkup_sys = atof(argv[i]);
        else if(strcmp(azColName[i],"k4_pri_pump_fb") == 0)
            fetched_sensor_data->battery.k4_pri_pump_fb = atof(argv[i]);
        else if(strcmp(azColName[i],"k6_sec_pump_fb") == 0)
            fetched_sensor_data->battery.k6_sec_pump_fb = atof(argv[i]);
        else if(strcmp(azColName[i],"k8_in_out_sfb") == 0)
            fetched_sensor_data->battery.k8_in_out_sfb = atof(argv[i]);
        else if(strcmp(azColName[i],"k9_fan_light") == 0)
            fetched_sensor_data->battery.k9_fan_light = atof(argv[i]);
        else if(strcmp(azColName[i],"k10_drain_fb") == 0)
            fetched_sensor_data->battery.k10_drain_fb = atof(argv[i]);
        else if(strcmp(azColName[i],"k13_chiller") == 0)
            fetched_sensor_data->battery.k13_chiller = atof(argv[i]);
        else if(strcmp(azColName[i],"stk_contactor1") == 0)
            fetched_sensor_data->battery.stk_contactor1 = atof(argv[i]);
        else if(strcmp(azColName[i],"stk_contactor2") == 0)
            fetched_sensor_data->battery.stk_contactor2 = atof(argv[i]);
        else if(strcmp(azColName[i],"backup_sys") == 0)
            fetched_sensor_data->battery.backup_sys = atof(argv[i]);
        else if(strcmp(azColName[i],"secondary_positive_pump") == 0)
            fetched_sensor_data->battery.secondary_positive_pump = atof(argv[i]);
        else if(strcmp(azColName[i],"secondary_negative_pump") == 0)
            fetched_sensor_data->battery.secondary_negative_pump = atof(argv[i]);
        else if(strcmp(azColName[i],"in_out_sensor_power_sup") == 0)
            fetched_sensor_data->battery.in_out_sensor_power_sup = atof(argv[i]);
        else if(strcmp(azColName[i],"pri_stack_cluster") == 0)
            fetched_sensor_data->battery.pri_stack_cluster = atof(argv[i]);
        else if(strcmp(azColName[i],"sec_stack_cluster") == 0)
            fetched_sensor_data->battery.sec_stack_cluster = atof(argv[i]);
        else if(strcmp(azColName[i],"actuator_valve_1") == 0)
            fetched_sensor_data->battery.actuator_valve_1 = atof(argv[i]);
        else if(strcmp(azColName[i],"actuator_valve_2") == 0)
            fetched_sensor_data->battery.actuator_valve_2 = atof(argv[i]);
        else if(strcmp(azColName[i],"actuator_valve_3") == 0)
            fetched_sensor_data->battery.actuator_valve_3 = atof(argv[i]);
        else if(strcmp(azColName[i],"actuator_valve_4") == 0)
            fetched_sensor_data->battery.actuator_valve_4 = atof(argv[i]);
        else if(strcmp(azColName[i],"actuator_valve_5") == 0)
            fetched_sensor_data->battery.actuator_valve_5 = atof(argv[i]);
        else if(strcmp(azColName[i],"actuator_valve_6") == 0)
            fetched_sensor_data->battery.actuator_valve_6 = atof(argv[i]);
        else if(strcmp(azColName[i],"fan_light") == 0)
            fetched_sensor_data->battery.fan_light = atof(argv[i]);
        else if(strcmp(azColName[i],"drain_pump") == 0)
            fetched_sensor_data->battery.drain_pump = atof(argv[i]);
        else if(strcmp(azColName[i],"chiller") == 0)
            fetched_sensor_data->battery.chiller = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_1_drive_run") == 0)
            fetched_sensor_data->battery.vfd_1_drive_run = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_2_drive_run") == 0)
            fetched_sensor_data->battery.vfd_2_drive_run = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_3_drive_run") == 0)
            fetched_sensor_data->battery.vfd_3_drive_run = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_4_drive_run") == 0)
            fetched_sensor_data->battery.vfd_4_drive_run = atof(argv[i]);
        else if(strcmp(azColName[i],"vfd_5_drive_run") == 0)
            fetched_sensor_data->battery.vfd_5_drive_run = atof(argv[i]);
